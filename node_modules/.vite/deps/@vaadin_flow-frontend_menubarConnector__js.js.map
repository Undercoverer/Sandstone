{
  "version": 3,
  "sources": ["../../@vaadin/flow-frontend/menubarConnector.js", "dep:@vaadin_flow-frontend_menubarConnector__js"],
  "sourcesContent": ["/*\n * Copyright 2000-2022 Vaadin Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n(function () {\n  const tryCatchWrapper = function (callback) {\n    return window.Vaadin.Flow.tryCatchWrapper(callback, 'Vaadin Menu Bar');\n  };\n\n  /**\n   * Initializes the connector for a menu bar element.\n   *\n   * @param {HTMLElement} menubar\n   * @param {string} appId\n   */\n  function initLazy(menubar, appId) {\n    if (menubar.$connector) {\n      return;\n    }\n\n    const observer = new MutationObserver((records) => {\n      const hasChangedAttributes = records.some((entry) => {\n        const oldValue = entry.oldValue;\n        const newValue = entry.target.getAttribute(entry.attributeName);\n        return oldValue !== newValue;\n      });\n\n      if (hasChangedAttributes) {\n        menubar.$connector.generateItems();\n      }\n    });\n\n    menubar.$connector = {\n      /**\n       * Generates and assigns the items to the menu bar.\n       *\n       * When the method is called without providing a node id,\n       * the previously generated items tree will be used.\n       * That can be useful if you only want to sync the disabled and hidden properties of root items.\n       *\n       * @param {number | undefined} nodeId\n       */\n      generateItems: tryCatchWrapper((nodeId) => {\n        if (!menubar.shadowRoot) {\n          // workaround for https://github.com/vaadin/flow/issues/5722\n          setTimeout(() => menubar.$connector.generateItems(nodeId));\n          return;\n        }\n\n        if (nodeId) {\n          menubar.__generatedItems = window.Vaadin.Flow.contextMenuConnector.generateItemsTree(appId, nodeId);\n        }\n\n        let items = menubar.__generatedItems || [];\n\n        // Propagate disabled state from items to parent buttons\n        items.forEach((item) => (item.disabled = item.component.disabled));\n\n        // Remove hidden items entirely from the array. Just hiding them\n        // could cause the overflow button to be rendered without items.\n        //\n        // The items-prop needs to be set even when all items are visible\n        // to update the disabled state and re-render buttons.\n        items = items.filter((item) => !item.component.hidden);\n\n        // Observe for hidden and disabled attributes in case they are changed by Flow.\n        // When a change occurs, the observer will re-generate items on top of the existing tree\n        // to sync the new attribute values with the corresponding properties in the items array.\n        items.forEach((item) => {\n          observer.observe(item.component, {\n            attributeFilter: ['hidden', 'disabled'],\n            attributeOldValue: true\n          });\n        });\n\n        menubar.items = items;\n\n        // Propagate click events from the menu buttons to the item components\n        menubar._buttons.forEach((button) => {\n          if (button.item && button.item.component) {\n            button.addEventListener('click', (e) => {\n              if (e.composedPath().indexOf(button.item.component) === -1) {\n                button.item.component.click();\n                e.stopPropagation();\n              }\n            });\n          }\n        });\n      })\n    };\n  }\n\n  window.Vaadin.Flow.menubarConnector = {\n    initLazy(...args) {\n      return tryCatchWrapper(initLazy)(...args);\n    }\n  };\n})();\n", "export default require(\"../node_modules/@vaadin/flow-frontend/menubarConnector.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AAgBA,KAAC,WAAY;AACX,YAAM,kBAAkB,SAAU,UAAU;AAC1C,eAAO,OAAO,OAAO,KAAK,gBAAgB,UAAU,iBAAiB;AAAA,MACvE;AAQA,eAAS,SAAS,SAAS,OAAO;AAChC,YAAI,QAAQ,YAAY;AACtB;AAAA,QACF;AAEA,cAAM,WAAW,IAAI,iBAAiB,CAAC,YAAY;AACjD,gBAAM,uBAAuB,QAAQ,KAAK,CAAC,UAAU;AACnD,kBAAM,WAAW,MAAM;AACvB,kBAAM,WAAW,MAAM,OAAO,aAAa,MAAM,aAAa;AAC9D,mBAAO,aAAa;AAAA,UACtB,CAAC;AAED,cAAI,sBAAsB;AACxB,oBAAQ,WAAW,cAAc;AAAA,UACnC;AAAA,QACF,CAAC;AAED,gBAAQ,aAAa;AAAA,UAUnB,eAAe,gBAAgB,CAAC,WAAW;AACzC,gBAAI,CAAC,QAAQ,YAAY;AAEvB,yBAAW,MAAM,QAAQ,WAAW,cAAc,MAAM,CAAC;AACzD;AAAA,YACF;AAEA,gBAAI,QAAQ;AACV,sBAAQ,mBAAmB,OAAO,OAAO,KAAK,qBAAqB,kBAAkB,OAAO,MAAM;AAAA,YACpG;AAEA,gBAAI,QAAQ,QAAQ,oBAAoB,CAAC;AAGzC,kBAAM,QAAQ,CAAC,SAAU,KAAK,WAAW,KAAK,UAAU,QAAS;AAOjE,oBAAQ,MAAM,OAAO,CAAC,SAAS,CAAC,KAAK,UAAU,MAAM;AAKrD,kBAAM,QAAQ,CAAC,SAAS;AACtB,uBAAS,QAAQ,KAAK,WAAW;AAAA,gBAC/B,iBAAiB,CAAC,UAAU,UAAU;AAAA,gBACtC,mBAAmB;AAAA,cACrB,CAAC;AAAA,YACH,CAAC;AAED,oBAAQ,QAAQ;AAGhB,oBAAQ,SAAS,QAAQ,CAAC,WAAW;AACnC,kBAAI,OAAO,QAAQ,OAAO,KAAK,WAAW;AACxC,uBAAO,iBAAiB,SAAS,CAAC,MAAM;AACtC,sBAAI,EAAE,aAAa,EAAE,QAAQ,OAAO,KAAK,SAAS,MAAM,IAAI;AAC1D,2BAAO,KAAK,UAAU,MAAM;AAC5B,sBAAE,gBAAgB;AAAA,kBACpB;AAAA,gBACF,CAAC;AAAA,cACH;AAAA,YACF,CAAC;AAAA,UACH,CAAC;AAAA,QACH;AAAA,MACF;AAEA,aAAO,OAAO,KAAK,mBAAmB;AAAA,QACpC,YAAY,MAAM;AAChB,iBAAO,gBAAgB,QAAQ,EAAE,GAAG,IAAI;AAAA,QAC1C;AAAA,MACF;AAAA,IACF,GAAG;AAAA;AAAA;;;AC7GH,IAAO,mDAAQ;",
  "names": []
}
